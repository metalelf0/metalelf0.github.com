<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Test on metalelf0.github.io</title><link>https://metalelf0.github.io/tags/test/</link><description>Recent content in Test on metalelf0.github.io</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 11 May 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://metalelf0.github.io/tags/test/index.xml" rel="self" type="application/rss+xml"/><item><title>Mocked - a minitest pattern</title><link>https://metalelf0.github.io/posts/2016-05-11-mocked-a-minitest-pattern/</link><pubDate>Wed, 11 May 2016 00:00:00 +0000</pubDate><guid>https://metalelf0.github.io/posts/2016-05-11-mocked-a-minitest-pattern/</guid><description>&lt;h3 id="minitest-is-good-for-mocking-right-well">
 Minitest is good for mocking, right? Well&amp;hellip;
 &lt;a class="heading-link" href="#minitest-is-good-for-mocking-right-well">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h3>
&lt;p>Minitest is gaining a lot of popularity and can actually be a 100% replacement for RSpec. It&amp;rsquo;s a pure ruby testing framework, it&amp;rsquo;s fast, light weight, and it supports both a test-unit like syntax and a spec engine with Rspec like syntax.&lt;/p>
&lt;p>Still, when it comes to mocking, it can be a little painful. You have to initialize mocks and verify them manually after running the code under test.&lt;/p></description></item><item><title>Machinist vs Factory Girl: Machinist win!</title><link>https://metalelf0.github.io/posts/2011-06-19-machinist-vs-factory-girl-machinist-win/</link><pubDate>Sun, 19 Jun 2011 00:00:00 +0000</pubDate><guid>https://metalelf0.github.io/posts/2011-06-19-machinist-vs-factory-girl-machinist-win/</guid><description>&lt;p>Today I decided to verify if &lt;a href="https://github.com/notahat/machinist" class="external-link" target="_blank" rel="noopener">Machinist&lt;/a> could be a good replacement for &lt;a href="https://github.com/thoughtbot/factory_girl" class="external-link" target="_blank" rel="noopener">Factory Girl&lt;/a>. In our project, we have a big problem with Factory Girl: even if you tell her not to hit the database, using the &lt;code>Factory.build&lt;/code> method, if an object has associations, these are saved on the DB. And this causes a huge slowdown in specs using factories. We&amp;rsquo;ve been using Factory Girl for nearly two years, and if we could find a way to stop him hitting the DB, we could really have a huge improvent in our test suite running time.&lt;/p></description></item></channel></rss>