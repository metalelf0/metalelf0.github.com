<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Metaprogramming on metalelf0.github.io</title><link>https://metalelf0.github.io/tags/metaprogramming/</link><description>Recent content in Metaprogramming on metalelf0.github.io</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 23 Apr 2010 00:00:00 +0000</lastBuildDate><atom:link href="https://metalelf0.github.io/tags/metaprogramming/index.xml" rel="self" type="application/rss+xml"/><item><title>Ruby Mixin and monkey patching examples</title><link>https://metalelf0.github.io/posts/2010-04-23-ruby-mixin-and-monkey-patching-examples/</link><pubDate>Fri, 23 Apr 2010 00:00:00 +0000</pubDate><guid>https://metalelf0.github.io/posts/2010-04-23-ruby-mixin-and-monkey-patching-examples/</guid><description>&lt;p>Let&amp;rsquo;s explore a couple of solutions to dynamically add a &lt;code>split_by_half&lt;/code> behaviour to an array object. The first technique is the &lt;!-- raw HTML omitted -->mixin&lt;!-- raw HTML omitted -->: it allows to add the method to a single array instance. The second one is called &lt;!-- raw HTML omitted -->monkey patching&lt;!-- raw HTML omitted -->, and adds the method directly to the Array class, adding this behaviour to every array instance.&lt;/p></description></item></channel></rss>