<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>habtm on metalelf0.github.io</title>
    <link>https://metalelf0.github.io/tags/habtm/</link>
    <description>Recent content in habtm on metalelf0.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Jan 2011 00:00:00 +0000</lastBuildDate><atom:link href="https://metalelf0.github.io/tags/habtm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rails 3 scopes with HABTM (has and belongs to many) relations</title>
      <link>https://metalelf0.github.io/posts/old-website/2011-01-28-rails-3-scopes-with-habtm-has-and-belongs-to-many-relations/</link>
      <pubDate>Fri, 28 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://metalelf0.github.io/posts/old-website/2011-01-28-rails-3-scopes-with-habtm-has-and-belongs-to-many-relations/</guid>
      <description>There are already many posts about this, but maybe this simple example will help you understand this subject even better.
# First model: tag.rb # note that pomodori is a custom plural for pomodoro  class Tag &amp;lt; ActiveRecord::Base  has_and_belongs_to_many :pomodori end  # Second model: pomodoro.rb # here is how to define a Rails 3 scope through the join table:  class Pomodoro &amp;lt; ActiveRecord::Base  has_and_belongs_to_many :tags   scope :by_tag, lambda { |tag_text|  joins(&amp;#34;join pomodori_tags, tags&amp;#34;).</description>
    </item>
    
  </channel>
</rss>
