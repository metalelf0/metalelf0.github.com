<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Regexp on metalelf0.github.io</title><link>https://metalelf0.github.io/tags/regexp/</link><description>Recent content in Regexp on metalelf0.github.io</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 09 Jul 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://metalelf0.github.io/tags/regexp/index.xml" rel="self" type="application/rss+xml"/><item><title>Vim regexp example: make a variable out of params</title><link>https://metalelf0.github.io/posts/2012-07-09-vim-regexp-example/</link><pubDate>Mon, 09 Jul 2012 00:00:00 +0000</pubDate><guid>https://metalelf0.github.io/posts/2012-07-09-vim-regexp-example/</guid><description>&lt;p>Today I wrote a regexp to change &lt;code>params[:page]&lt;/code> into &lt;code>page&lt;/code>. Here you are:&lt;/p>
&lt;pre>&lt;code>:'&amp;lt;,'&amp;gt;s/params\[:\(\p\{-}\)\]/\1/g
&lt;/code>&lt;/pre>
&lt;p>Let&amp;rsquo;s explain it briefly:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>the first part, &lt;code>:'&amp;lt;,'&amp;gt;s/&lt;/code>, is the vim command to substitute a pattern (or a regexp) with another one. The &lt;code>&amp;lt;,'&amp;gt;&lt;/code> part tells vim to operate on the visually selected text.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>the second part is the trickiest one. Let&amp;rsquo;s see it part to part:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>params\[:&lt;/code> is the first part of the string we want to match. the &lt;code>\&lt;/code> is used to escape the &lt;code>[&lt;/code> character.&lt;/p></description></item></channel></rss>