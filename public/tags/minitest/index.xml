<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Minitest on metalelf0.github.io</title>
    <link>https://metalelf0.github.io/tags/minitest/</link>
    <description>Recent content in Minitest on metalelf0.github.io</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 May 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://metalelf0.github.io/tags/minitest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mocked - a minitest pattern</title>
      <link>https://metalelf0.github.io/posts/old-website/2016-05-11-mocked-a-minitest-pattern/</link>
      <pubDate>Wed, 11 May 2016 00:00:00 +0000</pubDate>
      <guid>https://metalelf0.github.io/posts/old-website/2016-05-11-mocked-a-minitest-pattern/</guid>
      <description>&lt;h3 id=&#34;minitest-is-good-for-mocking-right-well&#34;&gt;Minitest is good for mocking, right? Well&amp;hellip;&lt;/h3&gt;&#xA;&lt;p&gt;Minitest is gaining a lot of popularity and can actually be a 100% replacement&#xA;for RSpec. It&amp;rsquo;s a pure ruby testing framework, it&amp;rsquo;s fast, light weight, and it&#xA;supports both a test-unit like syntax and a spec engine with Rspec like syntax.&lt;/p&gt;&#xA;&lt;p&gt;Still, when it comes to mocking, it can be a little painful. You have to&#xA;initialize mocks and verify them manually after running the code under test.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
