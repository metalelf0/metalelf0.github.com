<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design on metalelf0.github.io</title>
    <link>http://localhost:1313/tags/design/</link>
    <description>Recent content in Design on metalelf0.github.io</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 02 May 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Command pattern in ruby and rails</title>
      <link>http://localhost:1313/posts/2016-05-02-command-pattern/</link>
      <pubDate>Mon, 02 May 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2016-05-02-command-pattern/</guid>
      <description>&lt;h3 id=&#34;the-problem&#34;&gt;&#xA;  The problem&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#the-problem&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;If you have a growing Rails application and you feel your models are getting too fat you might have a problem. We&amp;rsquo;ve all been educated with the &amp;ldquo;fat models, thin controllers&amp;rdquo; dogma - but sometimes putting all the domain logic inside the models has its downsides.&lt;/p&gt;&#xA;&lt;p&gt;As an example, the typical flow of an &lt;code&gt;ActiveRecord&lt;/code&gt; object through a Rails request involves:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Null objects in Rails</title>
      <link>http://localhost:1313/posts/2013-12-23-null-objects-in-rails/</link>
      <pubDate>Mon, 23 Dec 2013 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2013-12-23-null-objects-in-rails/</guid>
      <description>&lt;h3 id=&#34;the-problem&#34;&gt;&#xA;  The problem&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#the-problem&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Recently I&amp;rsquo;ve seen in a project I work on a lot of occurrences of this code:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;privacy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;privacy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;enables_page?&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;The first part of the condition above is a bad practice in object oriented design. It forces collaborators of &lt;code&gt;user&lt;/code&gt; to know a part of its implementation - it could have a &lt;code&gt;privacy&lt;/code&gt; or it couldn&amp;rsquo;t.&lt;/p&gt;&#xA;&lt;h3 id=&#34;what-we-want&#34;&gt;&#xA;  What we want&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#what-we-want&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Wouldn&amp;rsquo;t it be much better to just write this:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
