<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>rails on metalelf0.github.io</title>
    <link>https://metalelf0.github.io/tags/rails/</link>
    <description>Recent content in rails on metalelf0.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 May 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://metalelf0.github.io/tags/rails/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mocked - a minitest pattern</title>
      <link>https://metalelf0.github.io/posts/old-website/2016-05-11-mocked-a-minitest-pattern/</link>
      <pubDate>Wed, 11 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://metalelf0.github.io/posts/old-website/2016-05-11-mocked-a-minitest-pattern/</guid>
      <description>Minitest is good for mocking, right? Well&amp;hellip; Minitest is gaining a lot of popularity and can actually be a 100% replacement for RSpec. It&amp;rsquo;s a pure ruby testing framework, it&amp;rsquo;s fast, light weight, and it supports both a test-unit like syntax and a spec engine with Rspec like syntax.
Still, when it comes to mocking, it can be a little painful. You have to initialize mocks and verify them manually after running the code under test.</description>
    </item>
    
    <item>
      <title>Command pattern in ruby and rails</title>
      <link>https://metalelf0.github.io/posts/old-website/2016-05-02-command-pattern/</link>
      <pubDate>Mon, 02 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://metalelf0.github.io/posts/old-website/2016-05-02-command-pattern/</guid>
      <description>The problem If you have a growing Rails application and you feel your models are getting too fat you might have a problem. We&amp;rsquo;ve all been educated with the &amp;ldquo;fat models, thin controllers&amp;rdquo; dogma - but sometimes putting all the domain logic inside the models has its downsides.
As an example, the typical flow of an ActiveRecord object through a Rails request involves:
 fetching the object from the DB based on the params you receive (controller); doing something with the object inside the model (model); when something goes wrong, you set errors onto the model attributes (model); you finally return the object to the view, and present it accordingly (view).</description>
    </item>
    
    <item>
      <title>Null objects in Rails</title>
      <link>https://metalelf0.github.io/posts/old-website/2013-12-23-null-objects-in-rails/</link>
      <pubDate>Mon, 23 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://metalelf0.github.io/posts/old-website/2013-12-23-null-objects-in-rails/</guid>
      <description>The problem Recently I&amp;rsquo;ve seen in a project I work on a lot of occurrences of this code:
if user.privacy &amp;amp;&amp;amp; user.privacy.enables_page?(...) The first part of the condition above is a bad practice in object oriented design. It forces collaborators of user to know a part of its implementation
 it could have a privacy or it couldn&amp;rsquo;t.  What we want Wouldn&amp;rsquo;t it be much better to just write this:</description>
    </item>
    
    <item>
      <title>Easily change the path for your Paperclip attachments</title>
      <link>https://metalelf0.github.io/posts/old-website/2012-12-10-easily-change-the-path-for-your-paperclip-attachments/</link>
      <pubDate>Mon, 10 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://metalelf0.github.io/posts/old-website/2012-12-10-easily-change-the-path-for-your-paperclip-attachments/</guid>
      <description>Today after releasing an app to production environment I saw a couple of paperclip warnings like this in my production.log file:
[paperclip] Duplicate URL for round_image with /system/:attachment/:id/:style/:filename. This will clash with attachment defined in PageElements::FranchisingCarouselEntry class  This happens because I defined an attachment with the same name in two different models, and the default strategy Paperclip uses to choose attachment locations could lead to filename clashing.
Here is a more detailed example:</description>
    </item>
    
    <item>
      <title>Vim regexp example: make a variable out of params</title>
      <link>https://metalelf0.github.io/posts/old-website/2012-07-09-vim-regexp-example/</link>
      <pubDate>Mon, 09 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://metalelf0.github.io/posts/old-website/2012-07-09-vim-regexp-example/</guid>
      <description>Today I wrote a regexp to change params[:page] into page. Here you are:
:&#39;&amp;lt;,&#39;&amp;gt;s/params\[:\(\p\{-}\)\]/\1/g  Let&amp;rsquo;s explain it briefly:
  the first part, :&#39;&amp;lt;,&#39;&amp;gt;s/, is the vim command to substitute a pattern (or a regexp) with another one. The &amp;lt;,&#39;&amp;gt; part tells vim to operate on the visually selected text.
  the second part is the trickiest one. Let&amp;rsquo;s see it part to part:
  params\[: is the first part of the string we want to match.</description>
    </item>
    
    <item>
      <title>Add bundle dir to your ctags</title>
      <link>https://metalelf0.github.io/posts/old-website/2012-03-26-add-bundle-dir-to-your-ctags/</link>
      <pubDate>Mon, 26 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://metalelf0.github.io/posts/old-website/2012-03-26-add-bundle-dir-to-your-ctags/</guid>
      <description>Ctags are a great way to improve navigation between large codebases. Used together with vim they allow to quickly jump to any method definition with just a keystroke - C-]. Adding your bundle dir when generating the tags file will allow jumping to the internals of the ruby gems you are using. Let&amp;rsquo;s see how to do this.
The setup needed is the following:
  install Exuberant Ctags. I suggest using brew install ctags, and remember to fix your $PATH so that running ctags --version shows Exuberant Ctags.</description>
    </item>
    
    <item>
      <title>Howto share Spree authentication/authorization engine</title>
      <link>https://metalelf0.github.io/posts/old-website/2012-03-02-howto-share-spree-authenticationauthorization-engine/</link>
      <pubDate>Fri, 02 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://metalelf0.github.io/posts/old-website/2012-03-02-howto-share-spree-authenticationauthorization-engine/</guid>
      <description>In a project I&amp;rsquo;m working on I&amp;rsquo;m using spree as a mountable engine. The host application has its own administration area, and I wanted to share the spree authentication with my app.
Spree uses devise to handle authentication. The code which is responsible for the authentication part of the app is in the auth module of Spree.
To share authentication with your application you have to:
 setup devise in your routes.</description>
    </item>
    
    <item>
      <title>Using virtual attributes for multi parameter form helpers in Rails</title>
      <link>https://metalelf0.github.io/posts/old-website/2011-10-28-using-virtual-attributes-for-multi-parameter-form-helpers-in-rails/</link>
      <pubDate>Fri, 28 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://metalelf0.github.io/posts/old-website/2011-10-28-using-virtual-attributes-for-multi-parameter-form-helpers-in-rails/</guid>
      <description>In a Rails application I am working on, I needed to setup a form with a field with a non-standard behaviour. The field represents a Date object, so the date_select FormHelper looked great; however, the date to display was not the actual date to be set on the database, but the day before. Changing all the data on the DB was a bit risky, so I had to stick with this requirement.</description>
    </item>
    
    <item>
      <title>Machinist vs Factory Girl: Machinist win!</title>
      <link>https://metalelf0.github.io/posts/old-website/2011-06-19-machinist-vs-factory-girl-machinist-win/</link>
      <pubDate>Sun, 19 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://metalelf0.github.io/posts/old-website/2011-06-19-machinist-vs-factory-girl-machinist-win/</guid>
      <description>Today I decided to verify if Machinist could be a good replacement for Factory Girl. In our project, we have a big problem with Factory Girl: even if you tell her not to hit the database, using the Factory.build method, if an object has associations, these are saved on the DB. And this causes a huge slowdown in specs using factories. We&amp;rsquo;ve been using Factory Girl for nearly two years, and if we could find a way to stop him hitting the DB, we could really have a huge improvent in our test suite running time.</description>
    </item>
    
    <item>
      <title>Howto run a rake task in sandbox mode</title>
      <link>https://metalelf0.github.io/posts/old-website/2011-03-10-howto-run-a-rake-task-in-sandbox-mode/</link>
      <pubDate>Thu, 10 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://metalelf0.github.io/posts/old-website/2011-03-10-howto-run-a-rake-task-in-sandbox-mode/</guid>
      <description>If you have a Rails rake task that somehow changes your DB data, but you want to be sure that the DB will be rolled back to its previous state after the rake task has completed, you can simply include this snippet right after your task definition:
ActiveRecord::Base.connection.increment_open_transactions ActiveRecord::Base.connection.begin_db_transaction at_exit do  ActiveRecord::Base.connection.rollback_db_transaction  ActiveRecord::Base.connection.decrement_open_transactions end If you wonder where is this code coming from, it&amp;rsquo;s directly from the rails console code.</description>
    </item>
    
    <item>
      <title>Rails 3 scopes with HABTM (has and belongs to many) relations</title>
      <link>https://metalelf0.github.io/posts/old-website/2011-01-28-rails-3-scopes-with-habtm-has-and-belongs-to-many-relations/</link>
      <pubDate>Fri, 28 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://metalelf0.github.io/posts/old-website/2011-01-28-rails-3-scopes-with-habtm-has-and-belongs-to-many-relations/</guid>
      <description>There are already many posts about this, but maybe this simple example will help you understand this subject even better.
# First model: tag.rb # note that pomodori is a custom plural for pomodoro  class Tag &amp;lt; ActiveRecord::Base  has_and_belongs_to_many :pomodori end  # Second model: pomodoro.rb # here is how to define a Rails 3 scope through the join table:  class Pomodoro &amp;lt; ActiveRecord::Base  has_and_belongs_to_many :tags   scope :by_tag, lambda { |tag_text|  joins(&amp;#34;join pomodori_tags, tags&amp;#34;).</description>
    </item>
    
    <item>
      <title>Format the results of a MySQL query like MySQL! In Rails!</title>
      <link>https://metalelf0.github.io/posts/old-website/2010-09-30-format-the-results-of-a-mysql-query-like-mysql-in-rails/</link>
      <pubDate>Thu, 30 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://metalelf0.github.io/posts/old-website/2010-09-30-format-the-results-of-a-mysql-query-like-mysql-in-rails/</guid>
      <description>It may happen that you need to display the results of a MySQL query on a page. E.g., your customer asks you to add a report on a page, and you don&amp;rsquo;t want to build a custom template, but just write the query and see the results.
We can do this easily thanks to the terminal-table gem (see http://github.com/visionmedia/terminal-table). This gem allows printing an ASCII table, just like the one you see when you use MySQL from the terminal.</description>
    </item>
    
    <item>
      <title>Vim for Rails Developers, by Ben Orenstein</title>
      <link>https://metalelf0.github.io/posts/old-website/2010-07-02-screencast-review---vim-for-rails-developers-by-ben-orenstein/</link>
      <pubDate>Fri, 02 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://metalelf0.github.io/posts/old-website/2010-07-02-screencast-review---vim-for-rails-developers-by-ben-orenstein/</guid>
      <description>Codeulate Screencasts
In the last months I&amp;rsquo;ve been working on a Rails project in an Agile team. I worked mostly on TextMate, and its speed is really amazing. It has a full set of features, with snippets, bundles, syntaxes and so on. It has many shortcuts, and apparently there&amp;rsquo;s no need to switch away from TextMate.
But, it has its drawbacks: it&amp;rsquo;s a Mac only application, so I can&amp;rsquo;t use it on my Linux box.</description>
    </item>
    
  </channel>
</rss>
