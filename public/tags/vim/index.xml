<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vim on andreaschiavini.com</title>
    <link>http://localhost:1313/tags/vim/</link>
    <description>Recent content in Vim on andreaschiavini.com</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 19 Dec 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vim - Change Colorscheme Based on Iterm profile</title>
      <link>http://localhost:1313/posts/2016-12-19-change-vim-colorscheme-based-on-iterm/</link>
      <pubDate>Mon, 19 Dec 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2016-12-19-change-vim-colorscheme-based-on-iterm/</guid>
      <description>&lt;p&gt;I like to change my (neo)vim colorscheme quite frequently, and when I do I want it to match my iterm colors. Many colorscheme authors also provide an iterm color palette, so you can import the &lt;code&gt;.itermcolors&lt;/code&gt; file, create a new iterm profile with that palette, start a new session and you have the same vim colorscheme in your iterm. But then, when you launch vim, you still have to type &lt;code&gt;:colorscheme somecolor&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vim - sort ruby methods by name</title>
      <link>http://localhost:1313/posts/2016-07-29-vim-sort-ruby-methods-by-name/</link>
      <pubDate>Fri, 29 Jul 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2016-07-29-vim-sort-ruby-methods-by-name/</guid>
      <description>&lt;p&gt;Yesterday I had to refactor a very large ruby class. It had a lot of methods and, to make it cleaner, I decided to sort methods alphabetically.&lt;/p&gt;&#xA;&lt;p&gt;Is there a way to do this in vim? Of course there is, and it&amp;rsquo;s quite tricky - so let&amp;rsquo;s see how we can do it.&lt;/p&gt;&#xA;&lt;p&gt;The basic idea is taken from &lt;a href=&#34;https://wincent.com/wiki/Sorting_functions_by_name_in_Vim&#34;&gt;this post on wincent.com&lt;/a&gt;, I just adapted it for ruby. All credits to this guy for his work :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vim regexp example: make a variable out of params</title>
      <link>http://localhost:1313/posts/2012-07-09-vim-regexp-example/</link>
      <pubDate>Mon, 09 Jul 2012 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2012-07-09-vim-regexp-example/</guid>
      <description>&lt;p&gt;Today I wrote a regexp to change &lt;code&gt;params[:page]&lt;/code&gt; into &lt;code&gt;page&lt;/code&gt;. Here you are:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;:&#39;&amp;lt;,&#39;&amp;gt;s/params\[:\(\p\{-}\)\]/\1/g&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s explain it briefly:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;the first part, &lt;code&gt;:&#39;&amp;lt;,&#39;&amp;gt;s/&lt;/code&gt;, is the vim command to substitute a pattern (or a regexp) with another one. The &lt;code&gt;&amp;lt;,&#39;&amp;gt;&lt;/code&gt; part tells vim to operate on the visually selected text.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;the second part is the trickiest one. Let&amp;rsquo;s see it part to part:&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;params\[:&lt;/code&gt; is the first part of the string we want to match. the &lt;code&gt;\&lt;/code&gt; is used to escape the &lt;code&gt;[&lt;/code&gt; character.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Add bundle dir to your ctags</title>
      <link>http://localhost:1313/posts/2012-03-26-add-bundle-dir-to-your-ctags/</link>
      <pubDate>Mon, 26 Mar 2012 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2012-03-26-add-bundle-dir-to-your-ctags/</guid>
      <description>&lt;p&gt;Ctags are a great way to improve navigation between large codebases. Used together with vim they allow to quickly jump to any method definition with just a keystroke - &lt;code&gt;C-]&lt;/code&gt;. Adding your bundle dir when generating the tags file will allow jumping to the internals of the ruby gems you are using. Let&amp;rsquo;s see how to do this.&lt;/p&gt;&#xA;&lt;p&gt;The setup needed is the following:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;install &lt;a href=&#34;http://http://ctags.sourceforge.net&#34;&gt;Exuberant Ctags&lt;/a&gt;. I suggest using &lt;code&gt;brew install ctags&lt;/code&gt;, and remember to fix your &lt;code&gt;$PATH&lt;/code&gt; so that running &lt;code&gt;ctags --version&lt;/code&gt; shows &lt;code&gt;Exuberant Ctags&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The right colors for your VIM</title>
      <link>http://localhost:1313/posts/2012-02-06-the-right-colors-for-your-vim/</link>
      <pubDate>Mon, 06 Feb 2012 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2012-02-06-the-right-colors-for-your-vim/</guid>
      <description>&lt;p&gt;I have a lot of Vim colorschemes, and I like to change them very often, reflecting my mood. I needed a way to showcase them all and quickly pick one.&lt;/p&gt;&#xA;&lt;p&gt;The original &lt;a href=&#34;https://code.google.com/p/vimcolorschemetest/&#34;&gt;Vim Color Scheme Test&lt;/a&gt; script by maverick.woo is written in Perl and the build works on Windows systems. I wanted to add some new features, and to test it with my own colorschemes, but as I&amp;rsquo;m not very confident with Perl, I preferred to start over with a new Ruby version instead of forking his project. Here&amp;rsquo;s my version (and here&amp;rsquo;s the &lt;a href=&#34;https://github.com/metalelf0/VimColorSchemeTest-Ruby&#34;&gt;github page&lt;/a&gt;):&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vim for Rails Developers, by Ben Orenstein</title>
      <link>http://localhost:1313/posts/2010-07-02-screencast-review---vim-for-rails-developers-by-ben-orenstein/</link>
      <pubDate>Fri, 02 Jul 2010 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2010-07-02-screencast-review---vim-for-rails-developers-by-ben-orenstein/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.codeulatescreencasts.com&#34;&gt;Codeulate Screencasts&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;In the last months I&amp;rsquo;ve been working on a Rails project in an Agile team. I worked mostly on TextMate, and its speed is really amazing. It has a full set of features, with snippets, bundles, syntaxes and so on. It has many shortcuts, and apparently there&amp;rsquo;s no need to switch away from TextMate.&lt;/p&gt;&#xA;&lt;p&gt;But, it has its drawbacks: it&amp;rsquo;s a Mac only application, so I can&amp;rsquo;t use it on my Linux box. Also, it&amp;rsquo;s a commercial application, and even if its cost is not too high, I don&amp;rsquo;t like to pay for software. Finally, it&amp;rsquo;s a GUI application, and it cannot be used over SSH to work on a production machine.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
